version: '3.9'
name: toltek-telemetry
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}
services:
# OpenTelemetry Collector
  toltek_otelcol:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: ${OTELCOL_HOST}    
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-config-extras.yml" ]
    volumes:
      - $PWD/config/otelcol/otelcol-config.yml:/etc/otelcol-config.yml
      - $PWD/config/otelcol/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
    ports:
      - ${OTELCOL_PORT_GRPC}:4317          # OTLP over gRPC receiver
      - ${OTELCOL_PORT_HTTP}:4318         # OTLP over HTTP receiver
    depends_on:
      - toltek_jaeger
    environment:
      JAEGER_ENDPOINT: ${JAEGER_ENDPOINT}
      ZIPKIN_ENDPOINT: ${ZIPKIN_ENDPOINT}
      PROMETHEUS_ENDPOINT: ${PROMETHEUS_ENDPOINT}
      SEQ_ENDPOINT: ${SEQ_ENDPOINT}
      SEQ_PASS: ${SEQ_PASS}
    logging: *logging
    networks:
      default:
        ipv4_address: ${OTELCOL_IP}
# Jaeger
  toltek_jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: ${JAEGER_HOST}
    restart: always
    command:
      - "--memory.max-traces=8000"
      - "--query.base-path=/jaeger/ui"
      - "--prometheus.server-url=${PROMETHEUS_DOMAIN}"
      - "--prometheus.query.normalize-calls=true"
      - "--prometheus.query.normalize-duration=true"       
    ports:
      - ${JAEGER_PORT_UI}:16686 # Jaeger UI
      - ${JAEGER_PORT_OLTP}:4317  # OTLP gRPC default port
    environment:
      - METRICS_STORAGE_TYPE=prometheus
    networks:
      default:
        ipv4_address: ${JAEGER_IP}
    logging: *logging
# Zipkin
  toltek_zipkin:
    image: openzipkin/zipkin:latest
    container_name: ${ZIPKIN_HOST}
    restart: always
#    volumes:
#      - $PWD/config/zipkin/zipkin.yaml:/etc/zipkin/zipkin.yaml  
    ports:
      - ${ZIPKIN_PORT}:9411
    environment:
      - STORAGE_TYPE=mem
    logging: *logging
    networks:
      default:
        ipv4_address: ${ZIPKIN_IP}
  # Prometheus
  toltek_prometheus:
    image: quay.io/prometheus/prometheus:v2.48.1
    container_name: ${PROMETHEUS_HOST}
    restart: always
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    volumes:
      - $PWD/config/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml  
    ports:
      - ${PROMETHEUS_PORT}:9090
    environment:
      OTELCOL_HOST: ${OTELCOL_HOST}
    logging: *logging
    networks:
      default:
        ipv4_address: ${PROMETHEUS_IP}
  # Grafana
  toltek_grafana:
    image: grafana/grafana
    container_name: ${GRAFANA_HOST}
    restart: always   
    volumes:
      - $PWD/config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - $PWD/config/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - ${GRAFANA_PORT}:3000
    environment:
      MONGODB_ENDPOINT: ${MONGODB_ENDPOINT}
      JAEGER_HOST: ${JAEGER_HOST}
      JAEGER_PORT_UI: ${JAEGER_PORT_UI}
      ZIPKIN_ENDPOINT: ${ZIPKIN_ENDPOINT}
      PROMETHEUS_HOST: ${PROMETHEUS_HOST}
      PROMETHEUS_PORT: ${PROMETHEUS_PORT}
      PROMETHEUS_ENDPOINT: ${PROMETHEUS_ENDPOINT}
      GF_SECURITY_ADMIN_PASSWORD : ${GRAFANA_PASS}
    networks:
      default:
        ipv4_address: ${GRAFANA_IP}
    logging: *logging
  # Seq
  toltek_seq:
    image: datalust/seq:latest
    container_name: ${SEQ_HOST}
    restart: always
    ports:
      - ${SEQ_PORT_UI}:80
      - ${SEQ_PORT}:5341
    environment:
      - ACCEPT_EULA=Y   
      - SEQ_API_CANONICALURI=${SEQ_DOMAIN}
      - SEQ_FIRSTRUN_ADMINUSERNAME=${SEQ_USERNAME}
      - SEQ_FIRSTRUN_ADMINPASSWORD=${SEQ_PASS}
    volumes:
      - $PWD/../data/seq-data:/data
    networks:
      default:
        ipv4_address: ${SEQ_IP}
